% -----------------------------------------------------------------------------
% Name: MachineTransition_2_1
%
% Collection: hol
% Description: HOL subgoals sent to MESON_TAC
%
% TPTP file created by sherlock at 21:36:41 on 27/09/2012.
% -----------------------------------------------------------------------------


fof(goal, conjecture,
    ((! [X, Y, Z] : (X != Y | X != Z | Y = Z) & ! [X] : X = X &
      ! [X, Y] :
        (X = Y | ~ bool(apply(X, apply(apply('EXT_POINT', X), Y))) |
         ~ bool(apply(Y, apply(apply('EXT_POINT', X), Y)))) &
      ! [X, Y] :
        (X = Y | bool(apply(X, apply(apply('EXT_POINT', X), Y))) |
         bool(apply(Y, apply(apply('EXT_POINT', X), Y)))) &
      ! [X, Y] :
        (X = Y |
         apply(X, apply(apply('EXT_POINT', X), Y)) !=
         apply(Y, apply(apply('EXT_POINT', X), Y))) &
      ! [X, Y] : (~ bool(X) | X != Y | bool(Y)) &
      ! [X, Y, Z, V] : (X != Y | Z != V | apply(X, Z) = apply(Y, V)) &
      ~ bool(apply(existential, apply('K', falsity))) &
      bool(apply(existential, apply('K', truth))) &
      ~ bool(apply(universal, apply('K', falsity))) &
      bool(apply(universal, apply('K', truth))) & ~ bool(falsity) &
      bool(truth) &
      ! [X, Y, Z] :
        apply(apply(apply('ReachIn', X), apply(apply('Next', X), Y)), Z) =
        apply(apply(apply('ReachIn', X), Y), apply('SUC', Z)) &
      ! [X, Y, Z] :
        (~ bool(apply(apply(apply('Next', X), Y), Z)) |
         bool(apply(X,
             apply(apply(pair, apply(apply(apply(gv5488, X), Y), Z)),
               Z)))) &
      ! [X, Y, Z] :
        (~ bool(apply(apply(apply('Next', X), Y), Z)) |
         bool(apply(Y, apply(apply(apply(gv5488, X), Y), Z)))) &
      ! [X, Y, Z, V] :
        (bool(apply(apply(apply('Next', X), Y), Z)) | ~ bool(apply(Y, V)) |
         ~ bool(apply(X, apply(apply(pair, V), Z)))) &
      ! [X, Y, Z] :
        apply(apply(apply('ReachIn', X), Y), apply('SUC', Z)) =
        apply(apply('Next', X), apply(apply(apply('ReachIn', X), Y), Z)) &
      ! [X, Y] : apply(apply(apply('ReachIn', X), Y), 0) = Y) =>
     ((bool(apply(apply(apply(apply('ReachIn', 'R'),
               apply(apply('Next', 'R'), 'B')), gv5278), state)) &
       ! [X] :
         (~
            bool(apply(apply(apply(apply('ReachIn', 'R'), 'B'), gv5278),
                X)) | ~ bool(apply('R', apply(apply(pair, X), state))))) =>
      $false))).
